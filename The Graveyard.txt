//end of user.js
        // User is signed in, see docs for a list of available properties
        // https://firebase.google.com/docs/reference/js/firebase.User
        //var user_data = {
        //  Points : Points+1
        //}
        //database_ref.child('users/' + user.uid).update(user_data)
        
        // ...
      } else {
        // User is signed out
        // ...
      }
    });
  });
    /*
    navigator.geolocation.getCurrentPosition((position) => {
    const pos = {
      lat: position.coords.latitude,
      lng: position.coords.longitude,
    };
    for (let i = 0; i < bins.length; i++){
      const bin = bins[i];
      if(lat == bins[1] && lng == bins[2]){
        var user_data = {
          Points : Points+1
        }
        var database_ref = database.ref()
        //database_ref.child('users/' + user.uid).update(user_data)
      }
    }
    },
    );
    */
    End of login.js 6/27
    /*
//FIREBASE DATABASE AUTHENTICATION
// Import the functions you need from the SDKs you need
import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js';
import { getAuth } from 'https://www.gstatic.com/firebasejs/9.0.0/firebase-auth.js';
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyAFvVTARYzQrWvE9OXCTY3JV3o9SxHbJ7U",
  authDomain: "mean-green-deal-726f9.firebaseapp.com",
  projectId: "mean-green-deal-726f9",
  storageBucket: "mean-green-deal-726f9.appspot.com",
  messagingSenderId: "747867835951",
  appId: "1:747867835951:web:084db4a1feb703eafe00da",
  measurementId: "G-2QKNB5QXF4"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const auth = getAuth();

onAuthStateChanged(auth, user => {
    if(user != null){
        console.log('logged in!');
    }else{
        console.log('No user');
    }
});
*/
End of login.js 6/27
   //Tutorial's login method.
/*
    loginForm.addEventListener("submit", e=> {
        e.preventDefault();

        // Perform your AJAX/Fetch login

        setFormMessage(loginForm, "error", "Invalid username/password combination");
    });

    document.querySelectorAll(".form__input").forEach(inputElement => {
        inputElement.addEventListener("blur", e => {
            if (e.target.id == "newUser" && e.target.value.length > 0 && e.target.value.length < 4) {
                setInputError(inputElement, "Username must be at least 4 characters in length");
            }
        });

        inputElement.addEventListener("input", e => {
            clearInputError(inputElement);
        })
    });
    */
    Middle of login.js 6/27
    /*
  for (i = 0; i <LoginInfo.length; i++){
      if(registerUser==LoginInfo[i].username){
          alert("That username is already in use, choose another")
          return
      }
  }
  for (i = 0; i <LoginInfo.length; i++){
      if(registerEmail==LoginInfo[i].email){
          alert("That email is already in use, choose another")
          return
      }
  }
  if (registerPassword == registerConfirmPassword)
  {
      var newUser = {
          username: registerUser,
          email: registerEmail
      }
      LoginInfo.push(newUser)
      alert("Your Account has been created!")

      location.href = 'https://mean-green-deal.github.io/';
      return
  }
  else{
      alert("Passwords do not match. Try again")
      return
  }
*/
//Middle of login.js
  ///////////////////////////////Valid Credentials ///////////////////////////////////////////
  //More tests for username, email and password
  /*
  if (registerUser.length < 3) return alert("That username is too short.");
  
  else if (registerEmail.length < 3) return alert("That email is too short.");
  
  else if(emailRegex(registerEmail) == false) return alert("Invalid email.");
  
  else if (registerPassword.length < 3) return alert("That password is too short.");
  */