html{
  box-sizing: border-box;
  font-size: 100%;
}
*, *::before, *::after {
  box-sizing: inherit;
}
body{
  margin: 0;
  padding: 0;
  color: #ffffff;
  background-color: #1b6e3b;
  background-image: linear-gradient(180deg, #1b6e3b 0%, #219633 50%, #1b6e3b 100%);

}
h1{
  font-family: 'Adobe Jenson', serif;
  text-align: center;
  position: absolute;
  top: -0.5em;
  left: 1.4em;
  /*font-size: 60px*/
}
#map {
  height: 90vh;
  width: 70%;
}

header{
   border-bottom: 1px solid #E2E8F0;
}
/*
.custom-map-control-button {
background-color: #fff;
border: 0;
border-radius: 2px;
box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
margin: 10px;
padding: 0 0.5em;
font: 400 18px Roboto, Arial, sans-serif;
overflow: hidden;
height: 40px;
cursor: pointer;
}
.custom-map-control-button:hover {
background: rgb(235, 235, 235);
}
*/
/*copying sams header*/
.brand-title {
font-size: 3.5vw;
margin: 0.5vw;
}

.toggle-button {
position: absolute; /* This makes it so that position doesn't change no matter what */
top: .75rem; /* gives space from the top */
right: 1rem; /* gives space from the right */
display: none; /* if we want to only show it while it while minimized, set this as none */
flex-direction: column; /* Shows spans vertically */
justify-content: space-between; /* leaves enough space between spans */
width: 30px;
height: 21px;
}

.toggle-button .bar {
height: 3px;
width: 100%;
background-color: white;
border-radius: 10px;
}
.navbar {
display: flex;
justify-content: space-between;
align-items: center;
background-color: #1b6e3b; 
color: white;
}

.navbar-links ul {
margin: 0;
padding: 0;
display: flex;
}

.navbar-links li    {
list-style: none;
}

.navbar-links li a  {
text-decoration: none;
color: white;
padding: 1rem;
display: block;
}

.navbar-links li:hover   {
background-color: #555;
}

/* we will use a Media Query. This makes it so that when a condition is met, then something will execute.
*/

@media (max-width: 600px)   {
.toggle-button {
    display: flex;
}

.navbar-links {
    display: none;
    width: 100%;
}

.navbar {
    flex-direction: column;
    align-items: flex-start;
}

.navbar-links ul {
    width: 100px;
    flex-direction: column;
}

.navbar-links li {
    text-align: center;
}

.navbar-links li a {
    padding: .5rem 1rem;
}

.navbar-links.active {
    display: flex;
}
}
.gm-style-iw-d {
  color: #000000;
}
/*////////////////////////////START OF POP UP////////////////////////////*/
body {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

/* Darkened background */
.dark-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 9998;
  display: none;
}

.popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 20px;
  background-color: #f9f9f9;
  border: 1px solid #ccc;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  z-index: 9999;
  max-width: 400px;
  display: none;
}

.popup h2 {
  margin-top: 0;
}

.arrow {
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: #f9f9f9;
  border: 1px solid #ccc;
}
.arrow-left {
  top: 50%;
  left: -20px; /* Adjust the positioning to center the arrow */
  position: relative;
  display: inline-block;
  padding-right: 20px; /* To give space for the arrow */
  transform: translateY(-50%); /* Center the arrow vertically */
  width: 20px; /* Set the width of the arrow element */
  height: 20px; /* Set the height of the arrow element */
  background-image: url('arrow.png'); /* Use the arrow image as the background */
  background-repeat: no-repeat; /* Prevent the image from repeating */
  background-position: center; /* Center the image within the element */
  background-size: cover; /* Ensure the image covers the entire background of the element */
}
#closePopup {
  display: block;
  margin-top: 10px;
  background-color: #007BFF;
  color: #fff;
  border: none;
  padding: 8px 16px;
  cursor: pointer;
}

#closePopup:hover {
  background-color: #0056b3;
}